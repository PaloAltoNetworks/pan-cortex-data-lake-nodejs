"use strict";
// Copyright 2015-2019 Palo Alto Networks, Inc
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdkError = exports.ErrorTypes = void 0;
/**
 * Types of errors that can be generated
 */
var ErrorTypes;
(function (ErrorTypes) {
    /**
     * Network communication error
     */
    ErrorTypes["ComsError"] = "COMS";
    /**
     * Error parsing a response or a configuration object
     */
    ErrorTypes["ParseError"] = "PARSE";
    /**
     * Invalid configuration provided
     */
    ErrorTypes["ConfigError"] = "CONFIG";
    /**
     * Errors generated by the Query API wrapper
     */
    ErrorTypes["QueryApi"] = "QUERY";
    /**
     * Errors generated by the High-Level Query API wrapper subclass
     */
    ErrorTypes["QueryClient"] = "QUERYCLIENT";
    /**
     * Errors generated by the Schema API wrapper
     */
    ErrorTypes["SchemaApi"] = "SCHEMA";
    /**
     * Errors generated by the Cortex hub convenience classes
     */
    ErrorTypes["HubClient"] = "HUB";
})(ErrorTypes = exports.ErrorTypes || (exports.ErrorTypes = {}));
/**
 * Error subclass to provide developer with insights on why a given Cortex
 * operation failed
 */
class SdkError extends Error {
    constructor(errorType, ...params) {
        super(...params);
        this.errorType = errorType;
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, SdkError);
        }
    }
}
exports.SdkError = SdkError;
