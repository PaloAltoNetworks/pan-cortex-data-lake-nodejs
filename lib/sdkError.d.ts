/**
 * Types of errors that can be generated
 */
export declare enum ErrorTypes {
    /**
     * Network communication error
     */
    ComsError = "COMS",
    /**
     * Error parsing a response or a configuration object
     */
    ParseError = "PARSE",
    /**
     * Invalid configuration provided
     */
    ConfigError = "CONFIG",
    /**
     * Errors generated by the Query API wrapper
     */
    QueryApi = "QUERY",
    /**
     * Errors generated by the High-Level Query API wrapper subclass
     */
    QueryClient = "QUERYCLIENT",
    /**
     * Errors generated by the Schema API wrapper
     */
    SchemaApi = "SCHEMA",
    /**
     * Errors generated by the Cortex hub convenience classes
     */
    HubClient = "HUB"
}
/**
 * Error subclass to provide developer with insights on why a given Cortex
 * operation failed
 */
export declare class SdkError extends Error {
    errorType: keyof typeof ErrorTypes;
    constructor(errorType: keyof typeof ErrorTypes, ...params: any[]);
}
