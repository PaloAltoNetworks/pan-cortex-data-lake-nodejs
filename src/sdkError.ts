// Copyright 2015-2019 Palo Alto Networks, Inc
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//       http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * Types of errors that can be generated
 */
export enum ErrorTypes {
    /**
     * Network communication error
     */
    ComsError = 'COMS',

    /**
     * Error parsing a response or a configuration object
     */
    ParseError = 'PARSE',

    /**
     * Invalid configuration provided
     */
    ConfigError = 'CONFIG',

    /**
     * Errors generated by the Query API wrapper
     */
    QueryApi = 'QUERY',

    /**
     * Errors generated by the High-Level Query API wrapper subclass
     */
    QueryClient = 'QUERYCLIENT',

    /**
     * Errors generated by the Schema API wrapper
     */
    SchemaApi = 'SCHEMA',

    /**
     * Errors generated by the Cortex hub convenience classes
     */
    HubClient = 'HUB'
}

/**
 * Error subclass to provide developer with insights on why a given Cortex
 * operation failed
 */
export class SdkError extends Error {
    errorType: keyof typeof ErrorTypes

    constructor(errorType: keyof typeof ErrorTypes, ...params: any[]) {
        super(...params)
        this.errorType = errorType
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, SdkError)
        }
    }
}
